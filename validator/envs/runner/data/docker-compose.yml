version: '3.8'

services:
  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    volumes:
      - redis:/data
    logging: &logging
      driver: journald
      options:
        tag: '{{.Name}}'

  db:
    image: postgres:14.0-alpine
    healthcheck:
      test: pg_isready -U postgres || exit 1
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB:postgres
    volumes:
      - db:/var/lib/postgresql/data
    logging:
      <<: *logging

  app:
    image: backenddevelopersltd/${VALIDATOR_IMAGE_REPO}:v0-latest
    pull_policy: always
    healthcheck:
      test: wget -q --spider 127.0.0.1:8000/admin/login/ || exit 1
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - PROMETHEUS_MULTIPROC_DIR=/prometheus-multiproc-dir
    volumes:
      - static:/root/src/static
      # Add this mount to each container that should dump Prometheus metrics.
      - ./prometheus-metrics:/prometheus-multiproc-dir
      - ${HOST_WALLET_DIR}:/root/.bittensor/wallets
    depends_on:
      - redis
      - db
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  celery-worker:
    image: backenddevelopersltd/${VALIDATOR_IMAGE_REPO}:v0-latest
    pull_policy: always
    init: true
    healthcheck:
      test: celery -A compute_horde_validator status > /dev/null || exit 1
    restart: unless-stopped
    env_file: ./.env
    environment:
      - CELERY_MASTER_CONCURRENCY=4
      - CELERY_WORKER_CONCURRENCY=2
      - PROMETHEUS_MULTIPROC_DIR=/prometheus-multiproc-dir
    volumes:
      - ${HOST_WALLET_DIR}:/root/.bittensor/wallets
    command: ./celery-entrypoint.sh
    tmpfs: /run
    depends_on:
      - redis
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  celery-beat:
    image: backenddevelopersltd/${VALIDATOR_IMAGE_REPO}:v0-latest
    pull_policy: always
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - PROMETHEUS_MULTIPROC_DIR=/prometheus-multiproc-dir
    volumes:
      - ${HOST_WALLET_DIR}:/root/.bittensor/wallets
    command: ./celery-beat-entrypoint.sh
    depends_on:
      - redis
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  connect-facilitator:
    image: backenddevelopersltd/${VALIDATOR_IMAGE_REPO}:v0-latest
    pull_policy: always
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - VALIDATOR_RUNNER_VERSION=${VALIDATOR_RUNNER_VERSION}
      - DEBUG=off
    volumes:
      - ${HOST_WALLET_DIR}:/root/.bittensor/wallets
    command: python manage.py connect_facilitator
    depends_on:
      - redis
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  nginx:
    image: backenddevelopersltd/compute-horde-validator-nginx:v0-latest
    restart: unless-stopped
    healthcheck:
      test: wget -q --spider 0.0.0.0:80/admin/login/ || exit 1
    env_file: ./.env
    volumes:
      - static:/srv/static:ro
    depends_on:
      - app
    command: nginx -g 'daemon off;'
    ports:
      - 127.0.0.1:${HTTP_PORT:-80}:80
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"


volumes:
  redis:
  db:
  static:
