version: '3.8'

services:
  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    volumes:
      - redis:/data
    logging: &logging
      driver: journald
      options:
        tag: '{{.Name}}'

  db:
    image: postgres:14.0-alpine
    healthcheck:
      test: pg_isready -U postgres || exit 1
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB:postgres
    volumes:
      - db:/var/lib/postgresql/data
    logging:
      <<: *logging

  app:
    image: backenddevelopersltd/${MINER_IMAGE_REPO}:${MINER_IMAGE_TAG:-v0-latest}
    pull_policy: always
    healthcheck:
      test: wget -q --spider 127.0.0.1:8000/admin/login/ || exit 1
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MINER_RUNNER_VERSION=${MINER_RUNNER_VERSION}
      - PROMETHEUS_MULTIPROC_DIR=/prometheus-multiproc-dir
      - VENDOR_DIRECTORY=/root/vendor
    volumes:
      - ${HOST_WALLET_DIR}:/root/.bittensor/wallets
      - ${HOST_VENDOR_DIR:-/tmp}:/root/vendor
      # mounting host docker socket to allow running executor images on host machine
      - /var/run/docker.sock:/var/run/docker.sock
      - static:/root/src/static
    depends_on:
      - redis
      - db
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  celery-worker:
    image: backenddevelopersltd/${MINER_IMAGE_REPO}:${MINER_IMAGE_TAG:-v0-latest}
    pull_policy: always
    init: true
    healthcheck:
      test: celery -A compute_horde_miner status > /dev/null || exit 1
    restart: unless-stopped
    env_file: ./.env
    environment:
      - CELERY_MASTER_CONCURRENCY=4
      - CELERY_WORKER_CONCURRENCY=2
      - PROMETHEUS_MULTIPROC_DIR=/prometheus-multiproc-dir
      - VENDOR_DIRECTORY=/root/vendor
    volumes:
      - ${HOST_WALLET_DIR}:/root/.bittensor/wallets
      - ${HOST_VENDOR_DIR:-/tmp}:/root/vendor
    command: ./celery-entrypoint.sh
    tmpfs: /run
    depends_on:
      - redis
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  celery-beat:
    image: backenddevelopersltd/${MINER_IMAGE_REPO}:${MINER_IMAGE_TAG:-v0-latest}
    pull_policy: always
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - PROMETHEUS_MULTIPROC_DIR=/prometheus-multiproc-dir
    volumes:
      - ${HOST_WALLET_DIR}:/root/.bittensor/wallets
    command: nice celery -A compute_horde_miner beat -l INFO --schedule /tmp/celerybeat-schedule -f /tmp/celery-beat.log
    depends_on:
      - redis
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  nginx:
    image: backenddevelopersltd/compute-horde-miner-nginx:v0-latest
    restart: unless-stopped
    healthcheck:
      test: wget -q --spider 0.0.0.0:80/admin/login/ || exit 1
    env_file: ./.env
    volumes:
      - static:/srv/static:ro
    depends_on:
      - app
    command: nginx -g 'daemon off;'
    ports:
      - ${BITTENSOR_MINER_PORT}:80
    logging:
      <<: *logging
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  docuum:
    image: stephanmisc/docuum:0.23.1
    command: [
      "--threshold", "${DOCKER_STORAGE_THRESHOLD:-50 GB}",
      "--keep", "^redis:6-alpine",
      "--keep", "^postgres:14.0-alpine",
      "--keep", "^containrrr/watchtower",
      "--keep", "^stephanmisc/docuum:0.23.1",
      "--keep", "^backenddevelopersltd/compute-horde-miner-runner:v0-latest",
      "--keep", "^backenddevelopersltd/${MINER_IMAGE_REPO}:v0-(latest|preprod)",
      "--keep", "^backenddevelopersltd/compute-horde-miner-nginx:v0-latest",
      "--keep", "^backenddevelopersltd/compute-horde-job:v0-latest",
      "--keep", "^us-central1-docker.pkg.dev/twistlock-secresearch/public/can-ctr-escape-cve-2022-0492:latest",
    ]
    init: true
    restart: unless-stopped
    volumes:
      - docuum:/root
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      <<: *logging

volumes:
  redis:
  db:
  static:
  docuum:
